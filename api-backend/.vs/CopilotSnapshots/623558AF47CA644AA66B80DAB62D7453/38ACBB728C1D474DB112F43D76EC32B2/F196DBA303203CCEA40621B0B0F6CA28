using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using api_backend.Entities;
using api_backend.Configurations;

namespace api_backend.DbContexts;

public partial class TutorCenterDbContext : DbContext
{
    public TutorCenterDbContext()
    {
    }

    public TutorCenterDbContext(DbContextOptions options)
        : base(options)
    {
    }

    public virtual DbSet<Aiagent> Aiagents { get; set; }
    public virtual DbSet<Aiconversation> Aiconversations { get; set; }
    public virtual DbSet<Aimessage> Aimessages { get; set; }
    public virtual DbSet<AimessageMedia> AimessageMedias { get; set; }
    public virtual DbSet<Announcement> Announcements { get; set; }
    public virtual DbSet<Classroom> Classrooms { get; set; }
    public virtual DbSet<ClassroomChatMessage> ClassroomChatMessages { get; set; }
    public virtual DbSet<ClassroomChatMessageMedia> ClassroomChatMessageMedias { get; set; }
    public virtual DbSet<ClassroomStudent> ClassroomStudents { get; set; }
    public virtual DbSet<Exercise> Exercises { get; set; }
    public virtual DbSet<ExerciseSubmission> ExerciseSubmissions { get; set; }
    public virtual DbSet<JoinRequest> JoinRequests { get; set; }
    public virtual DbSet<Lesson> Lessons { get; set; }
    public virtual DbSet<Material> Materials { get; set; }
    public virtual DbSet<Medium> Media { get; set; }
    public virtual DbSet<PaymentTransaction> PaymentTransactions { get; set; }
    public virtual DbSet<Permission> Permissions { get; set; }
    public virtual DbSet<Quiz> Quizzes { get; set; }
    public virtual DbSet<QuizAnswer> QuizAnswers { get; set; }
    public virtual DbSet<QuizAttempt> QuizAttempts { get; set; }
    public virtual DbSet<QuizOption> QuizOptions { get; set; }
    public virtual DbSet<QuizOptionMedia> QuizOptionMedias { get; set; }
    public virtual DbSet<QuizQuestion> QuizQuestions { get; set; }
    public virtual DbSet<QuizQuestionGroup> QuizQuestionGroups { get; set; }
    public virtual DbSet<QuizQuestionGroupMedia> QuizQuestionGroupMedias { get; set; }
    public virtual DbSet<QuizQuestionMedia> QuizQuestionMedias { get; set; }
    public virtual DbSet<QuizSection> QuizSections { get; set; }
    public virtual DbSet<Report> Reports { get; set; }
    public virtual DbSet<Role> Roles { get; set; }
    public virtual DbSet<User> Users { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
            optionsBuilder.UseSqlServer("Server=.;Database=TutorCenterDb;Trusted_Connection=True;MultipleActiveResultSets=true;TrustServerCertificate=true");
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        // Apply configurations using IEntityTypeConfiguration
        modelBuilder.ApplyConfiguration(new UserConfiguration());
        modelBuilder.ApplyConfiguration(new ClassroomConfiguration());
        modelBuilder.ApplyConfiguration(new RoleConfiguration());
        modelBuilder.ApplyConfiguration(new PermissionConfiguration());
        modelBuilder.ApplyConfiguration(new MediumConfiguration());
        modelBuilder.ApplyConfiguration(new QuizConfiguration());
        modelBuilder.ApplyConfiguration(new LessonConfiguration());
        
        // Apply all other configurations from assembly automatically
        // This will pick up any new configuration classes you create
        modelBuilder.ApplyConfigurationsFromAssembly(typeof(TutorCenterDbContext).Assembly);

        // Keep the original configurations for entities that don't have dedicated configuration classes yet
        ConfigureRemainingEntities(modelBuilder);

        OnModelCreatingPartial(modelBuilder);
    }

    private void ConfigureRemainingEntities(ModelBuilder modelBuilder)
    {
        // Configure entities that don't have dedicated configuration classes yet
        modelBuilder.Entity<Aiagent>(entity =>
        {
            entity.HasKey(e => e.AgentId).HasName("PK__AIAgents__9AC3BFF1F306657B");
            entity.ToTable("AIAgents");
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.Name).HasMaxLength(150);
            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Aiagents)
                .HasForeignKey(d => d.CreatedBy).HasConstraintName("FK_AIAgents_CreatedBy");
        });

        modelBuilder.Entity<Aiconversation>(entity =>
        {
            entity.HasKey(e => e.ConversationId).HasName("PK__AIConver__C050D877738FC676");
            entity.ToTable("AIConversations");
            entity.HasIndex(e => new { e.OwnerUserId, e.UpdatedAt }, "IX_AIConversations_Owner_Updated").IsDescending(false, true);
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.Title).HasMaxLength(200);
            entity.Property(e => e.UpdatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.HasOne(d => d.Agent).WithMany(p => p.Aiconversations).HasForeignKey(d => d.AgentId).HasConstraintName("FK_AIConversations_Agent");
            entity.HasOne(d => d.Classroom).WithMany(p => p.Aiconversations).HasForeignKey(d => d.ClassroomId).HasConstraintName("FK_AIConversations_Classroom");
            entity.HasOne(d => d.OwnerUser).WithMany(p => p.Aiconversations).HasForeignKey(d => d.OwnerUserId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AIConversations_Owner");
        });

        modelBuilder.Entity<Aimessage>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__AIMessag__C87C0C9C64220EE3");
            entity.ToTable("AIMessages");
            entity.HasIndex(e => new { e.ConversationId, e.CreatedAt }, "IX_AIMessages_Conv_Created");
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.SenderRole).HasMaxLength(20).IsUnicode(false);
            entity.HasOne(d => d.Conversation).WithMany(p => p.Aimessages).HasForeignKey(d => d.ConversationId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AIMessages_Conversation");
            entity.HasOne(d => d.Parent).WithMany(p => p.InverseParent).HasForeignKey(d => d.ParentId).HasConstraintName("FK_AIMessages_Parent");
        });

        modelBuilder.Entity<AimessageMedia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AIMessag__3214EC07416DB0C4");
            entity.ToTable("AIMessageMedias");
            entity.HasIndex(e => new { e.MessageId, e.OrderIndex }, "IX_AIMessageMedias_Message_Order");
            entity.HasIndex(e => new { e.MessageId, e.MediaId }, "UQ_AIMessageMedias").IsUnique();
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.Purpose).HasMaxLength(30).IsUnicode(false);
            entity.HasOne(d => d.Media).WithMany(p => p.AimessageMedia).HasForeignKey(d => d.MediaId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AIMessageMedias_Media");
            entity.HasOne(d => d.Message).WithMany(p => p.AimessageMedia).HasForeignKey(d => d.MessageId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AIMessageMedias_Message");
        });

        modelBuilder.Entity<Announcement>(entity =>
        {
            entity.HasKey(e => e.AnnouncementId).HasName("PK__Announce__9DE445740D919A96");
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.Title).HasMaxLength(200);
            entity.HasOne(d => d.Classroom).WithMany(p => p.Announcements).HasForeignKey(d => d.ClassroomId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Announcem__Class__01142BA1");
            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Announcements).HasForeignKey(d => d.CreatedBy).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Announcem__Creat__02084FDA");
        });

        modelBuilder.Entity<ClassroomChatMessage>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__Classroo__C87C0C9C0189CAD1");
            entity.HasIndex(e => new { e.ClassroomId, e.SentAt }, "IX_ClassroomChat_Class_SentAt").IsDescending(false, true);
            entity.Property(e => e.SentAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.HasOne(d => d.Classroom).WithMany(p => p.ClassroomChatMessages).HasForeignKey(d => d.ClassroomId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Classroom__Class__41EDCAC5");
            entity.HasOne(d => d.Sender).WithMany(p => p.ClassroomChatMessages).HasForeignKey(d => d.SenderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Classroom__Sende__42E1EEFE");
        });

        modelBuilder.Entity<ClassroomChatMessageMedia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Classroo__3214EC074AB72789");
            entity.HasIndex(e => new { e.MessageId, e.MediaId }, "UQ_CCMMed").IsUnique();
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.HasOne(d => d.Media).WithMany(p => p.ClassroomChatMessageMedia).HasForeignKey(d => d.MediaId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Classroom__Media__634EBE90");
            entity.HasOne(d => d.Message).WithMany(p => p.ClassroomChatMessageMedia).HasForeignKey(d => d.MessageId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Classroom__Messa__625A9A57");
        });

        modelBuilder.Entity<ClassroomStudent>(entity =>
        {
            entity.HasKey(e => new { e.ClassroomId, e.StudentId }).HasName("PK__Classroo__924DDC1340E6A535");
            entity.HasIndex(e => new { e.ClassroomId, e.IsPaid }, "IX_ClassroomStudents_Class_IsPaid").IsDescending(false, true);
            entity.Property(e => e.JoinedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.PaidAt).HasPrecision(0);
            entity.Property(e => e.Status).HasDefaultValue((byte)1);
            entity.HasOne(d => d.Classroom).WithMany(p => p.ClassroomStudents).HasForeignKey(d => d.ClassroomId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Classroom__Class__5AEE82B9");
            entity.HasOne(d => d.Student).WithMany(p => p.ClassroomStudents).HasForeignKey(d => d.StudentId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Classroom__Stude__5BE2A6F2");
        });

        modelBuilder.Entity<Exercise>(entity =>
        {
            entity.HasKey(e => e.ExerciseId).HasName("PK__Exercise__A074AD2F61AF41D3");
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.DueAt).HasPrecision(0);
            entity.Property(e => e.Title).HasMaxLength(200);
            entity.HasOne(d => d.AttachMedia).WithMany(p => p.Exercises).HasForeignKey(d => d.AttachMediaId).HasConstraintName("FK__Exercises__Attac__73BA3083");
            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Exercises).HasForeignKey(d => d.CreatedBy).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Exercises__Creat__74AE54BC");
            entity.HasOne(d => d.Lesson).WithMany(p => p.Exercises).HasForeignKey(d => d.LessonId).HasConstraintName("FK__Exercises__Lesso__72C60C4A");
        });

        modelBuilder.Entity<ExerciseSubmission>(entity =>
        {
            entity.HasKey(e => e.SubmissionId).HasName("PK__Exercise__449EE125B961E63F");
            entity.HasIndex(e => new { e.ExerciseId, e.StudentId }, "UQ_Submission_OnePerStudent").IsUnique();
            entity.Property(e => e.Comment).HasMaxLength(1000);
            entity.Property(e => e.GradedAt).HasPrecision(0);
            entity.Property(e => e.Score).HasColumnType("decimal(4, 2)");
            entity.Property(e => e.SubmittedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.HasOne(d => d.Exercise).WithMany(p => p.ExerciseSubmissions).HasForeignKey(d => d.ExerciseId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__ExerciseS__Exerc__797309D9");
            entity.HasOne(d => d.GradedByNavigation).WithMany(p => p.ExerciseSubmissionGradedByNavigations).HasForeignKey(d => d.GradedBy).HasConstraintName("FK__ExerciseS__Grade__7C4F7684");
            entity.HasOne(d => d.Media).WithMany(p => p.ExerciseSubmissions).HasForeignKey(d => d.MediaId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__ExerciseS__Media__7B5B524B");
            entity.HasOne(d => d.Student).WithMany(p => p.ExerciseSubmissionStudents).HasForeignKey(d => d.StudentId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__ExerciseS__Stude__7A672E12");
        });

        modelBuilder.Entity<JoinRequest>(entity =>
        {
            entity.HasKey(e => e.JoinRequestId).HasName("PK__JoinRequ__257393AA0DC5CA20");
            entity.Property(e => e.HandledAt).HasPrecision(0);
            entity.Property(e => e.Note).HasMaxLength(500);
            entity.Property(e => e.RequestedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.Status).HasMaxLength(20).IsUnicode(false).HasDefaultValue("pending");
            entity.HasOne(d => d.Classroom).WithMany(p => p.JoinRequests).HasForeignKey(d => d.ClassroomId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__JoinReque__Class__60A75C0F");
            entity.HasOne(d => d.HandledByNavigation).WithMany(p => p.JoinRequestHandledByNavigations).HasForeignKey(d => d.HandledBy).HasConstraintName("FK__JoinReque__Handl__628FA481");
            entity.HasOne(d => d.Student).WithMany(p => p.JoinRequestStudents).HasForeignKey(d => d.StudentId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__JoinReque__Stude__619B8048");
        });

        modelBuilder.Entity<Lesson>(entity =>
        {
            entity.HasKey(e => e.LessonId).HasName("PK__Lessons__B084ACD0E02CB47A");
            entity.Property(e => e.LessonType).HasMaxLength(30).IsUnicode(false).HasDefaultValue("lesson");
            entity.Property(e => e.PublishedAt).HasPrecision(0);
            entity.Property(e => e.Title).HasMaxLength(200);
            entity.HasOne(d => d.Classroom).WithMany(p => p.Lessons).HasForeignKey(d => d.ClassroomId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Lessons__Classro__68487DD7");
        });

        // Continue with other entities...
        ConfigureQuizEntities(modelBuilder);
        ConfigureMediaRelatedEntities(modelBuilder);
        ConfigurePaymentEntities(modelBuilder);
        ConfigureReportEntities(modelBuilder);
    }

    private void ConfigureQuizEntities(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Quiz>(entity =>
        {
            entity.HasKey(e => e.QuizId).HasName("PK__Quizzes__8B42AE8E44A83699");
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.DueAt).HasPrecision(0);
            entity.Property(e => e.GradingMethod).HasMaxLength(20).IsUnicode(false).HasDefaultValue("highest");
            entity.Property(e => e.MaxAttempts).HasDefaultValue(1);
            entity.Property(e => e.ShowAnswersAfter).HasMaxLength(20).IsUnicode(false).HasDefaultValue("after_due");
            entity.Property(e => e.ShuffleOptions).HasDefaultValue(true);
            entity.Property(e => e.ShuffleQuestions).HasDefaultValue(true);
            entity.Property(e => e.Title).HasMaxLength(200);
            entity.Property(e => e.TotalPoints).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UpdatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Quizzes).HasForeignKey(d => d.CreatedBy).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Quizzes__Created__0E6E26BF");
            entity.HasOne(d => d.Lesson).WithMany(p => p.Quizzes).HasForeignKey(d => d.LessonId).HasConstraintName("FK__Quizzes__LessonI__0D7A0286");
        });

        // Add other quiz-related entities here...
    }

    private void ConfigureMediaRelatedEntities(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Material>(entity =>
        {
            entity.HasKey(e => e.MaterialId).HasName("PK__Material__C50610F7BFB2F727");
            entity.Property(e => e.Title).HasMaxLength(200);
            entity.Property(e => e.UploadedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.HasOne(d => d.Lesson).WithMany(p => p.Materials).HasForeignKey(d => d.LessonId).HasConstraintName("FK__Materials__Lesso__6D0D32F4");
            entity.HasOne(d => d.Media).WithMany(p => p.Materials).HasForeignKey(d => d.MediaId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Materials__Media__6E01572D");
            entity.HasOne(d => d.UploadedByNavigation).WithMany(p => p.Materials).HasForeignKey(d => d.UploadedBy).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Materials__Uploa__6EF57B66");
        });
    }

    private void ConfigurePaymentEntities(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<PaymentTransaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK__PaymentT__55433A6B75BBC6C4");
            entity.HasIndex(e => new { e.ClassroomId, e.StudentId, e.CreatedAt }, "IX_PaymentTransactions_Class_Stu_Created").IsDescending(false, false, true);
            entity.HasIndex(e => e.OrderCode, "UQ_PaymentTransactions_Order").IsUnique();
            entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.Method).HasMaxLength(30).IsUnicode(false);
            entity.Property(e => e.OrderCode).HasMaxLength(100).IsUnicode(false);
            entity.Property(e => e.PaidAt).HasPrecision(0);
            entity.Property(e => e.ProviderTxnId).HasMaxLength(200).IsUnicode(false);
            entity.Property(e => e.Status).HasMaxLength(20).IsUnicode(false).HasDefaultValue("pending");
            entity.HasOne(d => d.Classroom).WithMany(p => p.PaymentTransactions).HasForeignKey(d => d.ClassroomId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentTransactions_Classroom");
            entity.HasOne(d => d.Student).WithMany(p => p.PaymentTransactions).HasForeignKey(d => d.StudentId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentTransactions_Student");
            entity.HasOne(d => d.ClassroomStudent).WithMany(p => p.PaymentTransactions).HasForeignKey(d => new { d.ClassroomId, d.StudentId }).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PaymentTransactions_Membership");
        });
    }

    private void ConfigureReportEntities(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Report>(entity =>
        {
            entity.HasKey(e => e.ReportId).HasName("PK__Reports__D5BD48059EE224A1");
            entity.Property(e => e.Category).HasMaxLength(50).IsUnicode(false);
            entity.Property(e => e.CreatedAt).HasPrecision(0).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.HandledAt).HasPrecision(0);
            entity.Property(e => e.Notes).HasMaxLength(1000);
            entity.Property(e => e.Reason).HasMaxLength(500);
            entity.Property(e => e.Status).HasMaxLength(20).IsUnicode(false).HasDefaultValue("pending");
            entity.Property(e => e.TargetType).HasMaxLength(50).IsUnicode(false);
            entity.HasOne(d => d.Handler).WithMany(p => p.ReportHandlers).HasForeignKey(d => d.HandlerId).HasConstraintName("FK__Reports__Handler__489AC854");
            entity.HasOne(d => d.Reporter).WithMany(p => p.ReportReporters).HasForeignKey(d => d.ReporterId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__Reports__Reporte__47A6A41B");
        });
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
