using api_backend.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace api_backend.Configurations
{
    public class QuizConfiguration : IEntityTypeConfiguration<Quiz>
    {
        public void Configure(EntityTypeBuilder<Quiz> builder)
        {
            builder.HasKey(e => e.QuizId).HasName("PK__Quizzes__8B42AE8E44A83699");

            builder.Property(e => e.CreatedAt)
                .HasPrecision(0)
                .HasDefaultValueSql("(sysutcdatetime())");
            
            builder.Property(e => e.DueAt).HasPrecision(0);
            
            builder.Property(e => e.GradingMethod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasDefaultValue("highest");
            
            builder.Property(e => e.MaxAttempts).HasDefaultValue(1);
            
            builder.Property(e => e.ShowAnswersAfter)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasDefaultValue("after_due");
            
            builder.Property(e => e.ShuffleOptions).HasDefaultValue(true);
            builder.Property(e => e.ShuffleQuestions).HasDefaultValue(true);
            builder.Property(e => e.Title).HasMaxLength(200);
            
            builder.Property(e => e.TotalPoints).HasColumnType("decimal(10, 2)");
            
            builder.Property(e => e.UpdatedAt)
                .HasPrecision(0)
                .HasDefaultValueSql("(sysutcdatetime())");

            builder.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Quizzes)
                .HasForeignKey(d => d.CreatedBy)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Quizzes__Created__0E6E26BF");

            builder.HasOne(d => d.Lesson).WithMany(p => p.Quizzes)
                .HasForeignKey(d => d.LessonId)
                .HasConstraintName("FK__Quizzes__LessonI__0D7A0286");
        }
    }
}