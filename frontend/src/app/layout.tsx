import type { Metadata } from "next";
import { Geist, Geist_Mono, Poppins, Open_Sans } from "next/font/google";
import "./globals.css";
import { Providers } from "@/store/Provider";
import { HomepageHeader, NotificationContainer } from "@/components";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const poppins = Poppins({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"], // tu·ª≥ ch·ªçn
  variable: "--font-poppins",
});

const openSans = Open_Sans({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"], // tu·ª≥ ch·ªçn gi·ªëng Poppins
  variable: "--font-open-sans",
});

const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000";

export const metadata: Metadata = {
  title: {
    default: "Bee - N·ªÅn t·∫£ng h·ªçc t·∫≠p tr·ª±c tuy·∫øn",
    template: "%s | Bee",
  },
  description:
    "Bee l√† trung t√¢m h·ªçc t·∫≠p tr·ª±c tuy·∫øn to√†n di·ªán, cung c·∫•p m√¥i tr∆∞·ªùng h·ªçc t·∫≠p hi·ªáu qu·∫£ cho h·ªçc sinh THPT. " +
    "N·ªÅn t·∫£ng h·ªó tr·ª£ ƒë·∫ßy ƒë·ªß c√°c m√¥n To√°n, L√Ω, H√≥a, Sinh, VƒÉn, Anh, S·ª≠, ƒê·ªãa v·ªõi h·ªá th·ªëng b√†i t·∫≠p ƒëa d·∫°ng, " +
    "video b√†i gi·∫£ng chi ti·∫øt, l·ªõp h·ªçc sinh ƒë·ªông v√† ng√¢n h√†ng ƒë·ªÅ thi phong ph√∫. " +
    "H·ªçc sinh c√≥ th·ªÉ luy·ªán thi tr·ª±c tuy·∫øn, l√†m b√†i t·∫≠p theo ch∆∞∆°ng, ki·ªÉm tra ki·∫øn th·ª©c, " +
    "v√† tham gia thi th·ª≠ online chu·∫©n b·ªã cho k·ª≥ thi quan tr·ªçng.",
  keywords: [
    "Bee",
    "h·ªçc tr·ª±c tuy·∫øn",
    "h·ªçc th√™m",
    "luy·ªán thi HSA",
    "luy·ªán thi ƒë√°nh gi√° nƒÉng l·ª±c",
    "luy·ªán thi TSA",
    "luy·ªán thi ƒë√°nh gi√° t∆∞ duy",
    "luy·ªán thi online",
    "luy·ªán thi trung h·ªçc ph·ªï th√¥ng qu·ªëc gia",
    "thi th·ª≠ THPT Qu·ªëc gia",
    "b√†i t·∫≠p To√°n",
    "b√†i t·∫≠p L√Ω",
    "b√†i t·∫≠p H√≥a",
    "b√†i t·∫≠p Sinh",
    "b√†i t·∫≠p VƒÉn",
    "b√†i t·∫≠p Anh",
    "b√†i t·∫≠p S·ª≠",
    "b√†i t·∫≠p ƒê·ªãa",
    "√¥n t·∫≠p",
    "trung t√¢m h·ªçc t·∫≠p",
  ],
  metadataBase: new URL(siteUrl),
  openGraph: {
    title: "Bee - N·ªÅn t·∫£ng h·ªçc t·∫≠p tr·ª±c tuy·∫øn",
    description:
      "Bee mang ƒë·∫øn tr·∫£i nghi·ªám h·ªçc t·∫≠p tr·ª±c tuy·∫øn to√†n di·ªán: t·ª´ video b√†i gi·∫£ng, b√†i t·∫≠p ƒëa d·∫°ng, " +
      "l·ªõp h·ªçc sinh ƒë·ªông ƒë·∫øn h·ªá th·ªëng thi th·ª≠ online chu·∫©n. " +
      "Ph√π h·ª£p v·ªõi h·ªçc sinh THPT chu·∫©n b·ªã cho k·ª≥ thi quan tr·ªçng.",
    url: siteUrl,
    siteName: "Bee",
    images: [
      {
        url: "/images/bee-og.png",
        width: 1200,
        height: 630,
        alt: "Bee - N·ªÅn t·∫£ng h·ªçc t·∫≠p tr·ª±c tuy·∫øn",
      },
    ],
    locale: "vi_VN",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Bee - N·ªÅn t·∫£ng h·ªçc t·∫≠p tr·ª±c tuy·∫øn",
    description:
      "Tr·∫£i nghi·ªám h·ªçc t·∫≠p hi·ªáu qu·∫£ c√πng Bee: To√°n, L√Ω, H√≥a, Sinh, VƒÉn, Anh, S·ª≠, ƒê·ªãa. " +
      "Video b√†i gi·∫£ng, b√†i t·∫≠p ƒëa d·∫°ng, thi c·ª≠ online chu·∫©n.",
    images: ["/images/bee-og.png"],
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      "max-snippet": -1,
      "max-image-preview": "large",
      "max-video-preview": -1,
    },
  },
  alternates: {
    canonical: siteUrl,
    languages: {
      "vi-VN": siteUrl,
    },
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="vi">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${poppins.variable} ${openSans.variable} antialiased`}
      >
        <Providers>
          {/* n·ªôi dung trang */}
          {
            <div className="min-h-screen bg-gray-100">
              {/* <HomepageHeader /> */}
              <main className="flex flex-col flex-1">{children}</main>
              {/* <HomepageFooter /> */}
            </div>
          }

          {/* üîî Notification lu√¥n n·∫±m tr√™n t·∫•t c·∫£ c√°c trang */}
          <NotificationContainer />
        </Providers>
      </body>
    </html>
  );
}
